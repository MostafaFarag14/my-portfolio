{"version":3,"sources":["Components/header/header.js","Components/projectsUrls.js","Components/description/description.js","Components/main/main.js","Components/about/about.js","Components/contact/contact.js","Components/app/App.js","serviceWorker.js","index.js"],"names":["Header","id","className","items","currentClassName","map","item","href","toLowerCase","Component","projectsUrls","name","url","code","image","tools","description","Description","this","props","Main","class","project","target","height","src","data-holder-rendered","type","tool","width","About","role","contacts","logo","text","Contact","contact","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77c78ca4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Scrollspy from 'react-scrollspy'\nimport './header.css'\nexport default class Header extends Component {\n  render() {\n    return (\n\n      <nav id=\"header\" className=\"header navbar navbar-expand-lg shadow sticky-top\" >\n        <div className=\"container justify-content-center\">\n\n          <ul className=\"navbar-nav\">\n            <Scrollspy className=\"navbar-nav scrollspy\" items={['about', 'portfolio', 'contact']} currentClassName=\"isCurrent\">\n              {['About', 'Portfolio', 'Contact'].map(item => {\n                return (<li className=\"nav-item mx-4\">\n                  <a className=\"nav-link\" href={`#${item.toLowerCase()}`}>{item}</a>\n                </li>)\n              })}\n            </Scrollspy>\n          </ul>\n\n        </div>\n\n      </nav>\n\n\n\n\n    )\n  }\n}\n","export const projectsUrls = [\n  {\n    name: \"Moive-App\",\n    url: \"https://ree-action.netlify.com/\",\n    code: \"https://github.com/MostafaFarag14/Movie-App.git\",\n    image: \"img/reeaction.PNG\",\n    tools: [\n      \"img/react.png\",\n      \"img/bootstrap-solid.svg\"\n    ],\n    description: `A movie browser react app that interacts with The Movie DB API to get trending,\n     top rated, popular and upcoming movies. also it has a live search for a certain movie. \n     every movie has a details such as rating and trailer that can be viewed by clicking it. \n     a movie overview can be shown by hovering the movie. Also there is a pagination to view different pages.\n    `\n  },\n  {\n    name: \"Jammming\",\n    url: \"https://jammming-hits.netlify.com/\",\n    code: \"https://github.com/MostafaFarag14/Jammming-react-app.git\",\n    image: \"img/jamming.PNG\",\n    tools: [\n      \"img/react.png\",\n      \"img/css.png\"\n\n    ],\n    description: `A react app that interacts with Spotify API to allow users to search the Spotify library,\n     create a custom playlist by adding songs from the search results, then save it to their Spotify account.`\n  },\n  {\n    name: \"ShooterGame\",\n    url: \"https://mostafafarag14.github.io/shooter-game/\",\n    code: \"https://github.com/MostafaFarag14/shooter-game.git\",\n    image: \"img/shooter.PNG\",\n    tools: [\n      \"img/javascript.png\",\n      \"img/html.png\",\n      \"img/css.png\"\n    ],\n    description: `It's a shooting game that allows the user to select 3 levels and 3 characters.\n    each level has a different environment and spawning frequency of 2 different kinds enemies.\n    Player has score and health and must reach the end to win`\n  },\n  {\n    name: \"Calculator\",\n    url: \"https://mostafafarag14.github.io/calculator/\",\n    code: \"https://github.com/MostafaFarag14/calculator.git\",\n    image: \"img/calculator.PNG\",\n    tools: [\n      \"img/react.png\",\n      \"img/bootstrap-solid.svg\"\n    ],\n    description: `A simple calculator using React`\n  }\n  ,\n  {\n    name: \"PianoPlayer\",\n    url: \"https://mostafafarag14.github.io/Piano-player/\",\n    code: \"https://github.com/MostafaFarag14/Piano-player.git\",\n    image: \"img/piano.PNG\",\n    tools: [\n      \"img/javascript.png\"\n    ],\n    description: `A piano player app which i have added functionality to it using javascript and made it \n    playable using mouse or keyboard keys by mapping each key or mouse click to certain audio`\n  },\n  {\n    name: \"ChoreDoor\",\n    url: \"https://mostafafarag14.github.io/Chore-Door/\",\n    code: \"https://github.com/MostafaFarag14/Chore-Door.git\",\n    image: \"img/choreDoor.PNG\",\n    tools: [\n      \"img/javascript.png\",\n      \"img/html.png\",\n      \"img/css.png\"\n    ],\n    description: `A game using html and javascript. There is a Bot hiding behind one of 3 doors,\n    Your mission is to open two Consecutive doors without running into the ChoreBot to win.\n    See if you can score a winning streak!`\n  },\n  {\n    name: \"Memory Allocation\",\n    code: \"https://github.com/MostafaFarag14/Memory-allocation.git\",\n    image: \"img/allocation.png\",\n    description: `A Desktop App built using c# and winForms to simulate allocating of proccesses algorithms`,\n    tools: [\n      \"img/cSharp.png\",\n      \"img/winform.png\"\n    ]\n  },\n  {\n    name: \"DES Function\",\n    code: \"https://github.com/MostafaFarag14/DES-Function.git\",\n    image: \"img/round_function.jpg\",\n    description: `A Console App with C++ to implement DES Function`,\n    tools: [\n      \"img/cplpl.png\",\n    ]\n  },\n  {\n    name: \"Scanner And Parser\",\n    code: \"https://github.com/MostafaFarag14/Parser.git\",\n    image: \"img/parser.jpg\",\n    description: `Scanner read the input from a file containing sample TINY code,\n    then identifies the tokens and passes that list of tokens to the parser to get \n    Recognized structures and saves it to a text file` ,\n    tools: [\n      \"img/cplpl.png\",\n    ]\n  },\n  {\n    name: \"Job scheduler\",\n    code: \"https://github.com/MostafaFarag14/Job-scheduler.git\",\n    image: \"img/Job scheduler.png\",\n    description: `A Console c++ app implements scheduling algorithms like FCFS, higher priority first , SJF and round robin`,\n    tools: [\n      \"img/cplpl.png\",\n    ]\n\n  }\n\n\n]","import React, { Component } from 'react'\nimport './description.css'\nexport default class Description extends Component {\n  render() {\n    return (\n\n      <div id=\"overView\" className=\"overlay container\" >\n        {this.props.description}\n      </div>\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { projectsUrls } from '../projectsUrls.js'\nimport Description from '../description/description'\nimport './main.css'\nconst logo = '/img/Capture.PNG'\nexport default class Main extends Component {\n  render() {\n    return (\n      <div id=\"portfolio\">\n        <div class=\"album py-5\">\n          <div class=\"container\">\n            <h1>PORTFOLIO</h1>\n            <div class=\"row\">\n              {\n                projectsUrls.map(project => {\n                  return <div class=\"col-md-6\">\n                    <div class=\"card mb-4 shadow\">\n                      <Description description={project.description} />\n                      <a href={project.url} target=\"_blank\">\n                        <img class=\"card-img-top\" height=\"300\" src={project.image} data-holder-rendered=\"true\" />\n                      </a>\n                      <hr className=\"m-0\"></hr>\n                      <div class=\"card-body\">\n                        <h5 class=\"card-text mb-3\">{project.name}</h5>\n                        <div class=\"d-flex justify-content-between align-items-center\">\n\n                          <div class=\"btn-group\">\n                            \n                            {project.url && <a type=\"button\" class=\"btn btn-sm btn-outline-info\" href={project.url} target=\"_blank\">View Live</a>}\n                            <a type=\"button\" class=\"btn btn-sm btn-outline-info\" href={project.code} target=\"_blank\">Source Code</a>\n                          </div>\n\n                          <small class=\"text-muted\"></small>\n                          <ul className=\"d-flex\">\n                            {project.tools.map(tool => {\n                              return (\n                                tool === \"/img/winform.png\" ? <li className=\"px-1\">\n                                  <img height=\"30\" width=\"70\" src={tool} />\n                                </li>\n                                  :\n                                  <li className=\"px-1\">\n                                    <img height=\"30\" width=\"30\" src={tool} />\n                                  </li>\n                              )\n                            })}\n\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                })\n              }\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './about.css'\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"about p-5\">\n      <main id=\"about\" role=\"main\" class=\"main inner cover w-50 h-100 p-3 mx-auto text-center\">\n        <h1 class=\"cover-heading\">ABOUT</h1>\n        <p class=\"lead\">Hi, my name is Mostafa Farag. I'm a graduate of Ain shams computer engineering \n        and past 3-months Cloud intern at ITI in which I learnt basic concepts of Cloud and Devops tools. \n        Recently I learnt React and built a few apps using it. Also, I became familiar with node and express. \n        In college, I built most of the projects using C++ and practiced python in Deep Learning Specialization at Coursera.\n        </p>\n        <p class=\"lead\">\n          <a href=\"https://drive.google.com/file/d/1dEG8OFDMHr0dtxm5CnKTxo-pUaOyGWGn/view\" target=\"_blank\" class=\"btn btn-lg btn-info\">View CV</a>\n        </p>\n      </main>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './contact.css'\nconst contacts = [\n  {\n    logo: \"img/phone.svg\",\n    url: \"#\",\n    text: \"01152787808\"\n  },\n  {\n    logo: \"img/linkedin.svg\",\n    url: \"https://www.linkedin.com/in/mostafafarag14/\",\n    text: \"\"\n  },\n  {\n    logo: \"img/GitHub.png\",\n    url: \"https://github.com/MostafaFarag14\",\n    text: \"\"\n  },\n  {\n    logo: \"img/gmail.png\",\n    url: \"#\",\n    text: \"mostafafarag140@gmail.com\"\n  }\n\n]\nexport default class Contact extends Component {\n  render() {\n    return (\n\n      <div id='contact' className=\"contacts  text-light\">\n        <h1 className=\"mb-5\">CONTACT</h1>\n        <ul className=\"justify-content-center d-flex mb-0\">\n          {contacts.map((contact, index) => {\n            return (\n              <div className=\"\">\n                <li key={index} className=\"px-5 d-flex\">\n                  {\n                    contact.url === \"#\" ? \n                      <img className=\"mx-5 d-flex\" src={contact.logo} height=\"40\" width=\"40\" ></img>\n                    :\n                    <a className=\"mx-5\" href={contact.url} target=\"_blank\">\n                    <img className=\"contact d-flex\" src={contact.logo} height=\"40\" width=\"40\" ></img>\n                  </a>\n                  }\n\n                </li>\n                <div className=\"p-2\">{contact.text}</div>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n\n\n\n    )\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Header from '../header/header'\nimport Main from '../main/main'\nimport About from '../about/about'\nimport Contact from '../contact/contact'\nfunction App() {\n  return (\n    <div className=\"App bg-light\">\n      <Header />\n      <About />\n      <Main />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}